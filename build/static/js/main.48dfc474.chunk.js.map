{"version":3,"sources":["components/Person.jsx","components/Persons.jsx","components/Filter.jsx","components/PersonForm.jsx","services/persons.js","components/Notification.jsx","App.js","serviceWorker.js","index.js"],"names":["Person","_ref","person","removeHandler","react_default","a","createElement","name","number","onClick","Persons","persons","filter","handlePersonRemove","toLowerCase","includes","map","components_Person","key","Filter","onChange","value","PersonForm","props","onSubmit","onNameChange","onNumberChange","type","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","successfulMessage","setSuccessfulMessage","_useState11","_useState12","errorMessage","setErrorMessage","updatePersons","personService","updatedPersons","useEffect","showSuccessfulMessageForFiveSeconds","setTimeout","showErrorMessageForFiveSeconds","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","returnedPerson","catch","error","addPersonToDb","components_Persons","window","confirm","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6MASeA,EAPA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,cAAX,OACbC,EAAAC,EAAAC,cAAA,WACGJ,EAAOK,KADV,IACiBL,EAAOM,OACtBJ,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMN,EAAcD,KAArC,YCUWQ,EAZC,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,QAASC,EAAZX,EAAYW,OAAQC,EAApBZ,EAAoBY,mBAApB,OACdT,EAAAC,EAAAC,cAAA,WACGK,EACEC,OAAO,SAAAV,GAAM,OACZA,EAAOK,KAAKO,cAAcC,SAASH,EAAOE,iBAE3CE,IAAI,SAAAd,GAAM,OACTE,EAAAC,EAAAC,cAACW,EAAD,CAAQC,IAAKhB,EAAOK,KAAML,OAAQA,EAAQC,cAAeU,QCDlDM,EAPA,SAAAlB,GAAA,IAAGW,EAAHX,EAAGW,OAAQQ,EAAXnB,EAAWmB,SAAX,OACbhB,EAAAC,EAAAC,cAAA,wCAEEF,EAAAC,EAAAC,cAAA,SAAOe,MAAOT,EAAQQ,SAAUA,MCWrBE,EAdI,SAACC,GAAD,OACjBnB,EAAAC,EAAAC,cAAA,QAAMkB,SAAUD,EAAMC,UACpBpB,EAAAC,EAAAC,cAAA,oBACQF,EAAAC,EAAAC,cAAA,SAAOe,MAAOE,EAAMhB,KAAMa,SAAUG,EAAME,gBAElDrB,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAOe,MAAOE,EAAMf,OAAQY,SAAUG,EAAMG,kBAEtDtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQqB,KAAK,UAAb,kCCVAC,EAAU,eAsBDC,EApBA,WAEb,OADgBC,IAAMC,IAAIH,GACXI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAkB5BL,EAfA,SAAAM,GAEb,OADgBL,IAAMM,KAAKR,EAASO,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EALA,SAAAQ,GAEb,OADgBP,IAAMQ,OAAN,GAAAC,OAAgBX,EAAhB,KAAAW,OAA2BF,KCL9BG,EAZM,SAAAvC,GAAuB,IAApB0B,EAAoB1B,EAApB0B,KAAMc,EAAcxC,EAAdwC,QAC5B,MAAgB,KAAZA,EACK,KAIPrC,EAAAC,EAAAC,cAAA,OAAKoC,UAAWf,GACbc,ICwIQE,EA1IH,WAAM,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTjC,EADSmC,EAAA,GACAG,EADAH,EAAA,GAAAI,EAEcL,mBAAS,IAFvBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGkBT,mBAAS,IAH3BU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTE,EAHSD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAIYb,mBAAS,IAJrBc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIT9C,EAJS+C,EAAA,GAIDC,EAJCD,EAAA,GAAAE,EAKkChB,mBAAS,IAL3CiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKTE,EALSD,EAAA,GAKUE,EALVF,EAAA,GAAAG,EAMwBpB,mBAAS,IANjCqB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAMTE,EANSD,EAAA,GAMKE,EANLF,EAAA,GAQVG,EAAgB,WACpBC,IAAuBtC,KAAK,SAAAuC,GAC1BtB,EAAWsB,MAIfC,oBAAU,WACRH,KACC,IAEH,IAAMI,EAAsC,SAAAhC,GAC1CuB,EAAqBvB,GACrBiC,WAAW,WACTV,EAAqB,KACpB,MAGCW,EAAiC,SAAAlC,GACrC2B,EAAgB3B,GAChBiC,WAAW,WACTN,EAAgB,KACf,MAqFL,OACEhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsE,EAAD,CAAcjD,KAAK,UAAUc,QAASsB,IACtC3D,EAAAC,EAAAC,cAACsE,EAAD,CAAcjD,KAAK,QAAQc,QAAS0B,IACpC/D,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACuE,EAAD,CAAQjE,OAAQA,EAAQQ,SATD,SAAA0D,GACzBlB,EAAUkB,EAAMC,OAAO1D,UASrBjB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC0E,EAAD,CACExD,SAvDY,SAAAsD,GAChBA,EAAMG,iBApCc,SAAAC,GACpBZ,EACUY,GACPlD,KAAK,SAAAmD,GACJlC,EAAWtC,EAAQ4B,OAAO4C,IAC1B9B,EAAW,IACXI,EAAa,IACbgB,EAAmC,gBAAAlC,OAAc2C,EAAa3E,SAE/D6E,MAAM,SAAAC,GACLV,EAA+BU,EAAMpD,SAASC,KAAKmD,OACnDhB,MAoCJiB,CAVqB,CAAE/E,KAAM6C,EAAS5C,OAAQgD,KAsD1CjD,KAAM6C,EACN3B,aAtBmB,SAAAqD,GACvBzB,EAAWyB,EAAMC,OAAO1D,QAsBpBb,OAAQgD,EACR9B,eApBqB,SAAAoD,GACzBrB,EAAaqB,EAAMC,OAAO1D,UAqBxBjB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACiF,EAAD,CACE5E,QAASA,EACTC,OAAQA,EACRC,mBAjDe,SAAAX,GACfsF,OAAOC,QAAP,gBAAAlD,OAA+BrC,EAAOK,QACxC+D,EACUpE,EAAOmC,IACdL,KAAK,WACJqC,IACAI,EAAmC,eAAAlC,OAAgBrC,EAAOK,SAE3D6E,MAAM,SAAAC,GACLV,EAA8B,wDAAApC,OAE1BrC,EAAOK,KAFmB,6DAK9B8D,WC5FUqB,QACW,cAA7BF,OAAOG,SAASC,UAEe,UAA7BJ,OAAOG,SAASC,UAEhBJ,OAAOG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.48dfc474.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ person, removeHandler }) => (\n  <div>\n    {person.name} {person.number}\n    <button onClick={() => removeHandler(person)}>poista</button>\n  </div>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, filter, handlePersonRemove }) => (\n  <div>\n    {persons\n      .filter(person =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      )\n      .map(person => (\n        <Person key={person.name} person={person} removeHandler={handlePersonRemove} />\n      ))}\n  </div>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ filter, onChange }) => (\n  <div>\n    rajaa näytettäviä\n    <input value={filter} onChange={onChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.onSubmit}>\n    <div>\n      nimi: <input value={props.name} onChange={props.onNameChange} />\n    </div>\n    <div>\n      numero: <input value={props.number} onChange={props.onNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\n\nexport default { getAll, create, update, remove };\n","import React from \"react\"\n\nconst Notification = ({ type, message }) => {\n  if (message === \"\") {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from \"react\";\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [successfulMessage, setSuccessfulMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const updatePersons = () => {\n    personService.getAll().then(updatedPersons => {\n      setPersons(updatedPersons);\n    });\n  };\n\n  useEffect(() => {\n    updatePersons();\n  }, []);\n\n  const showSuccessfulMessageForFiveSeconds = message => {\n    setSuccessfulMessage(message);\n    setTimeout(() => {\n      setSuccessfulMessage(\"\");\n    }, 5000);\n  };\n\n  const showErrorMessageForFiveSeconds = message => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 5000);\n  };\n\n  const addPersonToDb = personObject => {\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        showSuccessfulMessageForFiveSeconds(`Lisättiin ${personObject.name}`);\n      })\n      .catch(error => {\n        showErrorMessageForFiveSeconds(error.response.data.error);\n        updatePersons();\n      });\n  };\n\n  const updatePerson = (name, personObject) => {\n    const person = persons.find(person => person.name === newName);\n    personService\n      .update(person.id, personObject)\n      .then(() => {\n        updatePersons();\n        showSuccessfulMessageForFiveSeconds(\n          `Päivitettiin henkilön ${personObject.name} numero`\n        );\n      })\n      .catch(error => {\n        showErrorMessageForFiveSeconds(\n          `Jotakin meni pieleen, minkä vuoksi henkilön ${\n            personObject.name\n          } numeroa ei välttämättä päivitetty`\n        );\n        updatePersons();\n      });\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = { name: newName, number: newNumber };\n    // if (persons.map(person => person.name).includes(newName)) {\n    //   if (\n    //     window.confirm(\n    //       `${newName} on jo luettelossa, korvataanko vanha numero uudella?`\n    //     )\n    //   ) {\n    //     updatePerson(newName, personObject);\n    //   }\n    // } else {\n    addPersonToDb(personObject);\n    // }\n  };\n\n  const removePerson = person => {\n    if (window.confirm(`Poistetaanko ${person.name}`)) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          updatePersons();\n          showSuccessfulMessageForFiveSeconds(`Poistettiin ${person.name}`);\n        })\n        .catch(error => {\n          showErrorMessageForFiveSeconds(\n            `Jotakin meni pieleen, minkä vuoksi henkilöä ${\n              person.name\n            } ei välttämättä poistettu puhelinluettelosta`\n          );\n          updatePersons();\n        });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div>\n      <Notification type=\"success\" message={successfulMessage} />\n      <Notification type=\"error\" message={errorMessage} />\n      <h2>Puhelinluettelo</h2>\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <h3>lisää uusi</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        name={newName}\n        onNameChange={handleNameChange}\n        number={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n      <h3>Numerot</h3>\n      <Persons\n        persons={persons}\n        filter={filter}\n        handlePersonRemove={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}